// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.Replicate.Data;

namespace Pi.Replicate.Agent.Send.Migrations
{
    [DbContext(typeof(ReplicateDbContext))]
    partial class ReplicateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pi.Replicate.Schema.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AmountOfChunks");

                    b.Property<Guid>("FolderId");

                    b.Property<string>("Hash");

                    b.Property<string>("HostSource");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<long>("Size");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.FileChunk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<Guid?>("FileId");

                    b.Property<int>("SequenceNo");

                    b.Property<int>("Status");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileChunks");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FileChunk");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.Folder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("DeleteFilesAfterSend");

                    b.Property<int>("FolderType");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.FolderOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FolderId");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("FolderOptions");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.Host", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.TempFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FileId");

                    b.Property<string>("Hash");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("TempFiles");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.HostFileChunk", b =>
                {
                    b.HasBaseType("Pi.Replicate.Schema.FileChunk");

                    b.Property<Guid?>("HostId");

                    b.HasIndex("HostId");

                    b.HasDiscriminator().HasValue("HostFileChunk");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.File", b =>
                {
                    b.HasOne("Pi.Replicate.Schema.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pi.Replicate.Schema.FileChunk", b =>
                {
                    b.HasOne("Pi.Replicate.Schema.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");
                });

            modelBuilder.Entity("Pi.Replicate.Schema.HostFileChunk", b =>
                {
                    b.HasOne("Pi.Replicate.Schema.Host", "Host")
                        .WithMany()
                        .HasForeignKey("HostId");
                });
#pragma warning restore 612, 618
        }
    }
}
